{"version":3,"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACAA;AACA;AACE,SAJF;AAKA;;AACAC;AAA6C;AAAA,OAA7C;;AACAA;AACAA;AACAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCUaC;;;;;;;iBACX,oBAAQ,CAAW;;;;;;;yBADRA;AAAY;;;cAAZA;AAAYC;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACtBzBC;;AACAA;;AACIA;;AAOJA;;AAGAA;;AACEA;;AAOFA;;;;AAjBMA;;AAAAA;;AAWFA;;AAAAA;;;;;;qBDHU,CACV,8DAAQ,SAAR,EAAmB,CACjB,iEAAW,WAAX,EAAwB,CACtB,4DAAM;AAACC,mBAAO,EAAE;AAAV,WAAN,CADsB,EAEtB,8DAAQ,IAAR,EAAc,4DAAM;AAACA,mBAAO,EAAE;AAAV,WAAN,CAAd,CAFsB,CAAxB,CADiB,CAAnB,CADU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEUDC;;;;;yBAAAA;AAAS;;;cAATA;AAASC,oBAFRC,wDAEQ;;;mBAHT;AAAEC,kBALJ,CACPC,oEADO,EAEPC,yFAFO,EAGPC,8EAHO,CAKI;;;;4HAGFN,YAAS;AAAAO,yBAXlBL,wDAWkB,EAVlBM,qFAUkB;AAVHL,oBAGfC,oEAHe,EAIfC,yFAJe,EAIQC,+DAJR;AAUG;AANK;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRdG;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAe;;;cAAfA;AAAehB;AAAAC;AAAAC;AAAAC;AAAAC;AAAA;ACP5Ba;;AAGEA;;AACEA;;AACEA;;AAKFA;;AACFA;;AAGAA;;AAEEA;;AACEA;;AACEA;;AAEEA;;AAEFA;;AACFA;;AACAA;;AACEA;;AAEEA;;AACFA;;AACFA;;AACAA;;AACEA;;AAEEA;;AACFA;;AACFA;;AA4BFA;;AAEFA;;AAGFA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCpEA;AACA;AACA;;;AAEO,UAAMC,YAAW,GAAG;AACzBC,kBAAU,EAAE;AADa,OAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA,UAAIC,6EAAJ,EAA4B;AAC1B;AACD;;AAEDT,+EAAyBU,eAAzB,CAAyCC,sDAAzC,WACS,aAAG;AAAA,eAAIC,OAAO,CAACC,KAAR,CAAcC,GAAd,CAAJ;AAAA,OADZ;;;;;;;;;;;;;;;;;;;;;;;;;","names":["e","webpackEmptyAsyncContext","module","AppComponent","selectors","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_1__","opacity","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_0__","imports","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","_angular_platform_browser_animations__WEBPACK_IMPORTED_MODULE_4__","angular_bootstrap_md__WEBPACK_IMPORTED_MODULE_5__","declarations","_libs_components_navbar_navbar_component__WEBPACK_IMPORTED_MODULE_1__","NavbarComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","environment","production","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__","console","error","err"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/libs/components/navbar/navbar.component.ts","webpack:///src/app/libs/components/navbar/navbar.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from \"@angular/animations\";\r\n\r\n@Component({\r\n  selector: \"app-root\",\r\n  animations: [\r\n    trigger('showing', [\r\n      transition('void => *', [\r\n        style({opacity: 0}),\r\n        animate(3000, style({opacity: 1}))\r\n      ])\r\n      ]),\r\n    ],\r\n    templateUrl: \"./app.component.html\",\r\n    styleUrls: [\"./app.component.scss\"],\r\n})\r\nexport class AppComponent implements OnInit {\r\n  ngOnInit(): void {}\r\n}\r\n","<app-navbar></app-navbar>\r\n<section id=\"home\" class=\"home d-flex w-100\">\r\n    <img\r\n      @showing\r\n      class=\"mx-auto my-auto\"\r\n      src=\"../assets/img/logo_without_bg.png\"\r\n      width=\"40%\"\r\n      alt=\"AÇORBIZ\"\r\n    />\r\n</section>\r\n\r\n<!-- //#HERE -->\r\n<section id=\"sobre\" class=\"home d-flex w-100\" style=\"filter: invert(1);\">\r\n  <img\r\n    @showing\r\n    class=\"mx-auto my-auto\"\r\n    src=\"../assets/img/logo_without_bg.png\"\r\n    width=\"40%\"\r\n    alt=\"AÇORBIZ\"\r\n  />\r\n</section>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { AppComponent } from './app.component';\r\nimport { MDBBootstrapModule } from 'angular-bootstrap-md'\r\nimport { NavbarComponent } from './libs/components/navbar/navbar.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    MDBBootstrapModule.forRoot(),\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.scss']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mdb-navbar\n  SideClass=\"navbar navbar-expand-xl navbar-dark black fixed-top scrolling-navbar\"\n>\n  <mdb-navbar-brand>\n    <a class=\"navbar-brand\" href=\"#home\">\n      <img\n        src=\"../../../../assets/img/logo_without_bg.png\"\n        height=\"30\"\n        alt=\"\"\n        />\n    </a>\n  </mdb-navbar-brand>\n\n  <!-- Collapsible content -->\n  <links>\n    <!-- Links -->\n    <ul class=\"navbar-nav ml-auto\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect href=\"#sobre\">\n          <!-- <mdb-icon fas icon=\"envelope\"></mdb-icon> -->\n          Sobre\n          <!-- <span class=\"sr-only\">(current)</span> -->\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect href=\"#parceiros\">\n          <!-- <mdb-icon fas icon=\"cog\"></mdb-icon> -->\n          Parceiros\n        </a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link waves-light\" mdbWavesEffect href=\"#contactos\">\n          <!-- <mdb-icon fas icon=\"cog\"></mdb-icon> -->\n          Contactos\n        </a>\n      </li>\n\n      <!-- Dropdown -->\n      <!-- <li class=\"nav-item dropdown\" dropdown>\n        <a\n          dropdownToggle\n          mdbWavesEffect\n          type=\"button\"\n          class=\"nav-link dropdown-toggle waves-light\"\n          mdbWavesEffect\n        >\n          <mdb-icon fas icon=\"user\"></mdb-icon>\n          Profile\n          <span class=\"caret\"></span>\n        </a>\n        <div\n          *dropdownMenu\n          class=\"dropdown-menu dropdown-menu-right dropdown dropdown-primary\"\n          role=\"menu\"\n        >\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">\n            My account\n          </a>\n          <a class=\"dropdown-item waves-light\" mdbWavesEffect href=\"#\">\n            Log out\n          </a>\n        </div>\n      </li> -->\n    </ul>\n    <!-- Links -->\n  </links>\n  <!-- Collapsible content -->\n\n</mdb-navbar>\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}